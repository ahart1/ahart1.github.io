[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Amanda R. Hart",
    "section": "",
    "text": "As a PhD candidate at the University of Massachusetts Dartmouth, my research focuses on evaluating management alternatives for fisheries in the Northeastern and Mid-Atlantic regions. In my position as a postdoctoral researcher at the Gulf of Maine Research Institute I am now focusing on developing and testing climate-integrated stock assessments. Through this work I endeavor to bring the results of quantitative fishery and ecosystem science to the public in a comprehensible format to support the sustainable management of marine resources."
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Management Strategy Evaluation\n\n\n\n\n\nEcosystem-Based Fisheries Management\n\n\n\n\n\nFisheries Facing Climate Change\n\n\n\n\n\nSupporting Fishery Decision Making"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "PhD Candidate - School for Marine Science & Technology (SMAST)\nPostdoctoral researcher - Gulf of Maine Research Institute (GMRI), 350 Commercial St. Portland Maine 04101\nEmail: ahart@gmri.org"
  },
  {
    "objectID": "posts/Using-case_when/index.html",
    "href": "posts/Using-case_when/index.html",
    "title": "How To: Use case_when",
    "section": "",
    "text": "I used the tidyverse package and its case_when() function to create a new column filled with data based on the information in an existing data column.\nTo demonstrate, load a TidyTuesday dataset from 3/31/20:\n\nlibrary(tidyverse)\nbrewer_size <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv\")\n\nFor plotting purposes, I wanted to ensure that the brewer_size information would be listed in plots from smallest production (zero barrels of beer) to largest production (total production). To do this I created a new column that would default to the desired order when plotted and filled it using the case_when() function.\n\nupdated_brewer_size <- brewer_size %>% mutate(brewer_size_ordered = case_when(\n        brewer_size == \"Zero Barrels\" ~ \"A\",\n        brewer_size == \"Under 1 Barrel\" ~ \"B\",\n        brewer_size == \"1 to 1,000 Barrels\" ~ \"C\",\n        brewer_size == \"1,001 to 7,500 Barrels\" ~ \"D\",\n        brewer_size == \"7,501 to 15,000 Barrels\" ~ \"E\",\n        brewer_size == \"5,001 to 30,000 Barrels\" ~ \"F\",\n        brewer_size == \"30,001 to 60,000 Barrels\" ~ \"G\",\n        brewer_size == \"60,001 to 100,000 Barrels\" ~ \"H\",\n        brewer_size == \"100,001 to 500,000 Barrels\" ~ \"I\",\n        brewer_size == \"500,001 to 1,000,000 Barrels\" ~ \"J\",\n        brewer_size == \"1,000,001 to 6,000,000 Barrels\" ~ \"K\",\n        brewer_size == \"6,000,001 Barrels and Over\" ~ \"L\",\n        brewer_size == \"1,000,000 to 6,000,000 Barrels\" ~ \"M\",\n        brewer_size == \"2,000,000 to 6,000,000 Barrels\" ~ \"N\",\n        brewer_size == \"1,00,001 to 1,999,999 Barrels\" ~ \"O\",\n        brewer_size == \"Total\" ~ \"P\"))\n\nNote: the information provided to the case_when() function must be 2-sided where on the left you have a statement that could be passed to which() and on the right of the ~ you have the value to replace it with in the new column.\n\nhead(updated_brewer_size)\n\n# A tibble: 6 × 7\n   year brewer_size                    n_of_br…¹ total…² taxab…³ total…⁴ brewe…⁵\n  <dbl> <chr>                              <dbl>   <dbl>   <dbl>   <dbl> <chr>  \n1  2009 6,000,001 Barrels and Over            18  1.71e8  1.60e8 3639970 L      \n2  2009 1,000,001 to 6,000,000 Barrels         4  9.97e6  9.59e6   14548 K      \n3  2009 500,001 to 1,000,000 Barrels           7  4.83e6  4.54e6   21563 J      \n4  2009 100,001 to 500,000 Barrels            27  5.42e6  4.47e6  128000 I      \n5  2009 60,001 to 100,000 Barrels             19  1.50e6  1.22e6   95732 H      \n6  2009 30,001 to 60,000 Barrels              32  1.41e6  1.23e6   14369 G      \n# … with abbreviated variable names ¹​n_of_brewers, ²​total_barrels,\n#   ³​taxable_removals, ⁴​total_shipped, ⁵​brewer_size_ordered"
  },
  {
    "objectID": "posts/Mapping_with_ggplot/index.html",
    "href": "posts/Mapping_with_ggplot/index.html",
    "title": "Mapping with ggplot",
    "section": "",
    "text": "Post revised 2022-08"
  },
  {
    "objectID": "posts/Mapping_with_ggplot/index.html#basics-of-mapping",
    "href": "posts/Mapping_with_ggplot/index.html#basics-of-mapping",
    "title": "Mapping with ggplot",
    "section": "Basics of Mapping",
    "text": "Basics of Mapping\nPolygons and shapefiles can be plotted using the ggplot2 package to create maps.\nTo get started there are a few packages to load…\n\nlibrary(tidyverse) # Use for data manipulation\nlibrary(ggplot2) # Create plot objects\nlibrary(ggimage) # Allows plotting of images on graphs\nlibrary(marmap) # Access NOAA data\nlibrary(metR) # Color contours on map\nlibrary(mapproj)\n\n… some example data to add to maps…\n\ndat <- data.frame(longpt =c(-70.3, -72.9, -71.0),\n                  latpt = c(43.7, 41.3, 42.3),\n                  names = c(\"Portland\", \"New Haven\",\"Boston\"),\n                  imagecol = rep(\"https://www.pngmart.com/files/4/Cute-Starfish-PNG-Clipart.png\",3),\n                  stringsAsFactors = FALSE,\n                  year = c(1,2,3))\n\n… and some polygons from the ggplot2 package to work with.\n\nstates <- map_data(\"state\")\nNEUS <- subset(states, region %in% c(\"massachusetts\",\n                                     \"new hampshire\",\n                                     \"vermont\", \n                                     \"maine\", \n                                     \"rhode island\",\n                                     \"connecticut\"))\nWorld <- map_data(\"world\")\n\nA simple world map can be created by plotting the World polygon and specifying a coordinate system using the coord_map() function. Note: there are many coord_() options to choose from.\n\n# Start with a world map\nggplot() +\n        geom_polygon(data = World,\n                     aes(x=long, y=lat, group = group),\n                     fill = \"white\",\n                     color = \"black\") +\n        coord_map(xlim = c(-180, 180)) # Here xlim removes horizontal lines due to bug\n\n\n\n\nRestrict the geographic region using coord_fixed() and add points for three U.S. cities using geom_point().\n\nggplot() +\n        geom_polygon(data=World,\n                     aes(x = long, y = lat, group = group),\n                     fill = \"white\",\n                     color = \"black\") +\n        geom_point(data = dat, aes(x = longpt, y = latpt), color = \"red\", size = 1) + \n        coord_fixed(xlim = c(-175, -55), ylim = c(9, 80), ratio = 1.2)# Limits lat/long coordinates plotted\n\n\n\n\nAlternatively, maps may be created by plotting specific state polygons, and geom_image() can be used to plot an image rather than points.\n\nNEUS <- ggplot() +\n        geom_polygon(data = NEUS,\n                     aes(x = long, y = lat, group = group),\n                     fill = \"grey\",\n                     color = \"black\") +\n        geom_point(data = dat, aes(x = longpt, y = latpt), color = \"blue\", size = 3) +\n        geom_image(data=dat, mapping = aes(x = longpt, y = latpt, image = imagecol), size = 0.12) + # if size = is inside aes() then you will get an error that \"col\" argument isn't provided\n        theme(panel.background = element_rect(fill = \"steelblue\"))\nNEUS\n\n\n\n\nNote: without specifying the coordinate system the states appear stretched."
  },
  {
    "objectID": "posts/Mapping_with_ggplot/index.html#inset-maps",
    "href": "posts/Mapping_with_ggplot/index.html#inset-maps",
    "title": "Mapping with ggplot",
    "section": "Inset Maps",
    "text": "Inset Maps\nMap objects may be layered by treating them as grobs (graphical objects).\nTo create an inset map, turn the inset region map into a grob using ggplotGrob(). The inset map should include a polygon highlighting the region mapped in the larger map. This can be accomplished using the geom_path() function and the latitudinal and longitudinal coordinates highlighted should match the dimensions of the larger map.\n\n# Highlight region mapped in larger figure\nRegion <- data.frame(long = c(-72, -72, -64, -64, -72),\n                     lat = c(41, 48, 48, 41, 41))\n\n# Inset map \nNorthAmerica <- ggplotGrob(\n        ggplot() +\n        geom_polygon(data = World,\n\n                     aes(x = long, y = lat, group = group),\n\n                     fill = \"grey\",\n\n                     color = \"black\") + \n        coord_fixed(xlim = c(-125, -55), ylim = c(25, 55), ratio = 1.2) +\n        geom_path(data = Region, aes(x = long, y = lat), size = 0.8, color = \"blue\") +\n        theme_bw() +\n        theme(line = element_blank(), text = element_blank(), panel.border = element_rect(color = \"black\", fill = NULL, size = 2), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"transparent\", color = NA)))\n\nThen create the larger map that the inset will be added to:\n\nGOM <- ggplot() +\n       geom_polygon(data = World,\n                    aes(x=long, y = lat, group = group),\n                    fill = \"grey\",\n                    color = \"black\") +\n       coord_fixed(xlim = c(-72, -64), ylim = c(41, 48), ratio = 1.2) + # could use world high res data instead\n       theme_minimal()\nGOM\n\n\n\n\nTo complete the inset map, combine the larger map and inset grob. xmin/xmax and ymin/ymax define the position of the inset map:\n\nFinalPlot <- GOM +\n        annotation_custom(grob = NorthAmerica, \n                          xmin = -68, xmax = -63.3,\n                          ymin = 45.5, ymax = 49.2) # Determines placement & size of incert\nFinalPlot"
  },
  {
    "objectID": "posts/Mapping_with_ggplot/index.html#adding-topography",
    "href": "posts/Mapping_with_ggplot/index.html#adding-topography",
    "title": "Mapping with ggplot",
    "section": "Adding Topography",
    "text": "Adding Topography\nPhysical features like topography and bathymetry may be added as data layers to ggplots.\nThe marmap package provides access to government NOAA data:\n\nBathy <- getNOAA.bathy(lon1 = -75, lon2 = -62,\n                       lat1 = 39, lat2 = 48, resolution = 1)\n\nQuerying NOAA database ...\n\n\nThis may take seconds to minutes, depending on grid size\n\n\nBuilding bathy matrix ...\n\n# Convert data to matrix:\nBathy_Final <- as.matrix(Bathy)\nclass(Bathy_Final) <- \"matrix\"\n\n# Now reshape it to long format and plot\nBathyData <- Bathy_Final %>%\n        as.data.frame() %>%\n        rownames_to_column(var = \"lon\") %>%\n        gather(lat, value, -1) %>%\n        mutate_all(funs(as.numeric))\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nPlease use a list of either functions or lambdas: \n\n  # Simple named list: \n  list(mean = mean, median = median)\n\n  # Auto named with `tibble::lst()`: \n  tibble::lst(mean, median)\n\n  # Using lambdas\n  list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\nThis warning is displayed once every 8 hours.\nCall `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\n\nhead(BathyData)\n\n        lon lat value\n1 -75.00000  39    -5\n2 -74.98331  39    -7\n3 -74.96662  39    -5\n4 -74.94994  39     1\n5 -74.93325  39    10\n6 -74.91656  39    10\n\n\nThe geom_contour() function will highlight physical features using bathymetric lines:\n\nBathyData %>%\n        ggplot() +\n        geom_contour(aes(x = lon, y = lat, z = value),\n                     bins = 50, colour = \"black\") + # bins determine # of contours (try 50 vs. 100)\n        geom_polygon(data = World,\n                     aes(x=long, y = lat, group = group),\n                     fill = \"grey\",\n                     color = \"black\") +\n        coord_fixed(xlim = c(-74, -64), ylim = c(40, 47.3), ratio = 1.2) +\n        theme(panel.background = element_rect(fill = \"lightskyblue1\"), line = element_blank())\n\n\n\n\nAlternatively, the geom_contour_fill() function may be used to display color-differentiated bathymetric features:\n\nBathyData %>%\n        ggplot() +\n        geom_contour_filled(data = BathyData, aes(x = lon, y = lat, z = value), \n                      breaks = c(0, -50, -100, -200, -300, -400, -500, -5000)) + # breaks determine # of contours\n        scale_fill_manual(values =  c(\"#DEF5E5FF\", \"#A0DFB9FF\", \"#54C9ADFF\", \"#38AAACFF\", \"#348AA6FF\", \"#366A9FFF\", \"#40498EFF\"), name = \"Depth (m)\", labels = c(\"[0,50)\", \"[50,100)\", \"[100, 200)\", \"[200, 300)\", \"[300,400)\", \"[400,500)\", \"[500,5000)\" )) + # Add custom depth colors and legend labels\n        geom_polygon(data = World,\n                     aes(x=long, y = lat, group = group),\n                     fill = \"grey\",\n                     color = \"black\") +\n        coord_fixed(xlim = c(-74, -64), ylim = c(40, 47.3), ratio = 1.2)"
  },
  {
    "objectID": "posts/HowTo_change_legend_labels/index.html",
    "href": "posts/HowTo_change_legend_labels/index.html",
    "title": "How to change the labels for a ggplot legend",
    "section": "",
    "text": "To demonstrate, load a TidyTuesday dataset from 3/31/20:\n\nlibrary(tidyverse)\n\nbrewer_size <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv\")\n\nHere is the initial plot of brewer numbers by brewer size over time:\n\nbrewer_size %>%\n        group_by(year) %>%\n        ggplot() +\n        geom_line(aes(y = n_of_brewers, x = year, col = brewer_size))\n\n\n\n\nI wanted to ensure that the brewer_size information would be listed in plots from smallest production (zero barrels of beer) to largest production (total production). To do this I created a new column that would default to the desired order when plotted and filled it using the case_when() function.\n\nupdated_brewer_size <- brewer_size %>% mutate(brewer_size_ordered = case_when(brewer_size == \"Zero Barrels\" ~  \"A\", \n                brewer_size == \"Under 1 Barrel\" ~ \"B\", \n                brewer_size == \"1 to 1,000 Barrels\" ~ \"C\",\n                brewer_size == \"1,001 to 7,500 Barrels\" ~ \"D\",\n                brewer_size == \"7,501 to 15,000 Barrels\" ~ \"E\", \n                brewer_size == \"5,001 to 30,000 Barrels\" ~ \"F\", \n                brewer_size == \"30,001 to 60,000 Barrels\" ~ \"G\", \n                brewer_size == \"60,001 to 100,000 Barrels\" ~ \"H\", \n                brewer_size == \"100,001 to 500,000 Barrels\" ~ \"I\", \n                brewer_size == \"500,001 to 1,000,000 Barrels\" ~ \"J\", \n                brewer_size == \"1,000,001 to 6,000,000 Barrels\" ~ \"K\",\n                brewer_size == \"6,000,001 Barrels and Over\" ~ \"L\",\n                brewer_size == \"1,000,000 to 6,000,000 Barrels\" ~ \"M\",\n                brewer_size == \"2,000,000 to 6,000,000 Barrels\" ~ \"N\",\n                brewer_size == \"1,00,001 to 1,999,999 Barrels\" ~ \"O\",\n                brewer_size == \"Total\" ~ \"P\"))\n\nNote: the information provided to the case_when() function must be 2-sided where on the left you have a statement that could be passed to which() and on the right of the ~ you have the value to replace it with in the new column.\nThis solution correctly ordered my legend, but left me with uninformative labels. To return the labels to their original names I used the scale_colour_discrete() function.\n\nupdated_brewer_size %>% \n        filter(brewer_size_ordered != \"M\",\n               brewer_size_ordered != \"N\",\n               brewer_size_ordered != \"O\",\n               brewer_size_ordered != \"NA\") %>% \n        group_by(year) %>% \n        ggplot() + \n        geom_line(aes(y = n_of_brewers, x = year, col=brewer_size_ordered)) + \n        scale_colour_discrete(name = \"Brewer size\", \n                              labels = c(\"Zero Barrels\",\n                                         \"Under 1 Barrel\",\n                                         \"1 to 1,000 Barrels\",\n                                         \"1,001 to 7,500 Barrels\",\n                                         \"7,501 to 15,000 Barrels\",\n                                         \"15,001 to 30,000 Barrels\",\n                                         \"30,001 to 60,000 Barrels\", \n                                         \"60,001 to 100,000 Barrels\", \n                                         \"100,001 to 500,000 Barrels\",\n                                         \"500,001 to 1,000,000 Barrels\", \n                                         \"1,000,001 to 6,000,000 Barrels\",\n                                         \"6,000,001 Barrels and Over\",\n                                         \"Total\"))\n\n\n\n\nNote: scale_colour_discrete() mapped these new legend labels to the existing col argument that specifies line color. But for plots where you use fill to change the plot color (e.g. boxplots, histograms…) use scale_fill_discrete() instead."
  },
  {
    "objectID": "research_MSE.html",
    "href": "research_MSE.html",
    "title": "Management Strategy Evaluation",
    "section": "",
    "text": "I regularly use Management Strategy Evaluation (MSE) in my research to help answer “what if” questions about fisheries management and to explore the consequences of system uncertainties. MSE frameworks use computer and statistical models to describe interactions between dynamic marine ecosystems and management systems. These models go by many names but generally fall into 2 broad categories: operating models and management procedures. Operating models describe the marine ecosystems that we manage and the fisheries that operate within these ecosystems. Management procedures encompass regulatory actions used to govern human interactions with marine ecosystems and generally include stock assessment models that track fish population size over time and harvest rules that regulate fishing to ensure sustainable harvests. MSE simulates the interaction between these two models to help understand the mid- and long-term impacts of different management decisions and fishing regulations, without risking the health of real-world fishery resources."
  },
  {
    "objectID": "research_climate.html",
    "href": "research_climate.html",
    "title": "Fisheries Facing Climate Change",
    "section": "",
    "text": "Climate change is a growing concern in coastal communities dependent on fishing, as it is likely to alter the spatial and temporal availability of targeted species, and potentially the management frameworks required to maintain sustainable fishing practices. This study seeks to quantify the impact of population movement on the recreational summer flounder fishery and explore alternative management procedures that may alleviate existing and future conflicts surrounding access to this fishery.\n\n\nClimate-informed assessment modeling for American plaice\nIncorporating environmental information into stock assessments has the potential to resolve retrospective patterns and improve assessment performance but is still an area of active research. I led the development of Woods Hole Assessment Model (WHAM) stock assessments for American plaice, including several climate-informed models. This work informed a recent research track assessment process for American plaice."
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Google Scholar"
  },
  {
    "objectID": "publications.html#technical-reports",
    "href": "publications.html#technical-reports",
    "title": "Publications",
    "section": "Technical reports",
    "text": "Technical reports\nHart, A.R., Kerr, L., Miller, T.J. 2022. A state-space assessment of American plaice using the Woods Hole Assessment Model (WHAM). Working Paper for American plaice Research Track Stock Assessment.\nNEFMC. 2018. Management Strategy Evaluation User Guide (Appendix V). In: NEFMC .2018. Amendment 8 to the Atlantic Herring Fishery Management Plan, including a Draft Environmental Impact Statement (DEIS). Volume II - Appendices. (Contributions by G.Fay and A.R. Hart). Prepared for the September 2018 meeting of the New England Fishery Management Council. 303p.\nWildermuth, R., Cadrin, S., Fay, G., Cummings, J., Hansell, A., Haugen, J., Hart, A.R., Morse, M., Wright, B. 2018. Technical Minutes of the Review Group for Arctic Fish Stocks (RGARWG) in Review of ICES Arctic Fisheries Working Group (AFWG) Report 2018.\nDeroba, J.J., Fay, G., Weston, A.E., Hart, A.R. 2018. A Stock Synthesis model for Atlantic herring. In: Deroba, J.J. 2018. Atlantic herring operational assessment report. 2018. US Department of Commerce, Northeast Fisheries Science Center. 22 pp.\nHart, A.R., Fay, G., Boelke, D. 2017. Draft impacts of Amendment 8 ABC control rule alternatives. Report to the September 2017 New England Fishery Management Council Atlantic Herring Advisory Panel and Herring Committee. 108 pp.\nWright B., Cadrin, S.X., Fay, G., Calabrese, N., Hansell, A., Hart, A.R., Horton, L., Rosellon-Druker, J., Weston, A.E., Wildermuth, R., Winton, M. 2017. Technical Minutes of the Review Group for Celtic Sea Stocks (RGCS). ICES CM 2017/ACOM:13."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am currently working as a postdoctoral researcher at the Gulf of Maine Research Institute (GMRI) while wrapping up work on my PhD. My work focuses on integrating climate and ecosystem information into fisheries management systems and evaluating management efficacy through simulation testing.\nMy interest in this work was sparked while pursuing a Bachelor’s of Science in Marine Science and Biology from the University of Miami which I completed in 2016. I moved to Massachusetts to attend graduate school at the University of Massachusetts Dartmouth’s School of Marine Science and Technology (SMAST) where I worked to develop Ecosystem-Based Fisheries Management alternatives in New England. As a PhD candidate I am working to complete several Management Strategy Evaluation projects focused on assessing the efficacy of these alternatives and their consequences for fisheries in the Northeast U.S.\nAt GMRI I co-organize and lead a monthly open data science meeting and I previously co-founded the South Coast MA UseR group to build a community of open science practitioners at the University of Massachusetts Dartmouth and partners across southern Massachusetts. During my time at UMass Dartmouth I also served as a graduate student representative for SMAST’s graduate student association and represented SMAST on the university’s Graduate Student Senate during the 2019-2020 academic year. In this role I managed the senate website and served as chair for the COVID-19 Relief Funding Committee. In my free time I also play saxophone in university and community bands."
  },
  {
    "objectID": "research_EBFM.html",
    "href": "research_EBFM.html",
    "title": "Ecosystem-Based Fisheries Management",
    "section": "",
    "text": "This project focused on testing combinations of EBFM methods to support development of operational EBFM in the Northeastern U.S. and to explore statistical methods that help interpret ecosystem management outcomes. This work is published in Fisheries Research and can be found here.\n\nTackling technical interactions in EBFM\nIn Management Strategy Evaluation (MSE) studies interactions between fishing fleets that fish for the same species and/or fish in the same geographic area have often been simplified or ignored when testing new management procedures. This is problematic when fisheries have existing conflicts due to fleet interactions and bycatch concerns, because the impact of new management procedures on these conflicts cannot be tested. This study seeks to estimate the strength of fleet interactions for a multi-species fishery in the Northeastern U.S. and integrate this information into an existing MSE framework to help test EBFM in this region."
  },
  {
    "objectID": "research_decision.html",
    "href": "research_decision.html",
    "title": "Supporting Fishery Decision Making",
    "section": "",
    "text": "A key strength of Management Strategy Evaluation (MSE) is its ability to help assess trade-offs between diverse and potentially conflicting management goals. However, as the number of goals considered increases, the volume of additional quantitative output can be challenging to present in a manner that is easily interpreted by end users. This study provides a decision table visualization tool to highlight trade-offs and draws on applied examples from the recent Atlantic herring MSE conducted by the New England Fishery Management Council to demonstrate its contribution to a real-world fishery decision-making processes."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Recent Blog Posts",
    "section": "",
    "text": "R\n\n\n\n\n\n\n\n\n\n\n\nMay 21, 2020\n\n\nAmanda R. Hart\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nR Graphics\n\n\n\n\n\n\n\n\n\n\n\nMay 21, 2020\n\n\nAmanda R. Hart\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR Graphics\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nMay 21, 2020\n\n\nAmanda R. Hart\n\n\n\n\n\n\nNo matching items"
  }
]