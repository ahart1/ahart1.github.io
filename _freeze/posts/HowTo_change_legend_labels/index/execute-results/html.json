{
  "hash": "697b0f5b41b9ec5492e73065f0dccc2d",
  "result": {
    "markdown": "---\ntitle: \"How to change the labels for a ggplot legend\"\nauthor: \"Amanda R. Hart\"\ndate: \"2020-05-21\"\ncategories: [R Graphics, R]\nimage: \"Fig1.png\"\n---\n\n\nThe `scale_colour_discrete()` function can be used alongside ggplot to provide new names in the legend.\n\nTo demonstrate, load a TidyTuesday dataset from 3/31/20:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nbrewer_size <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv\")\n```\n:::\n\n\nHere is the initial plot of brewer numbers by brewer size over time:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrewer_size %>%\n        group_by(year) %>%\n        ggplot() +\n        geom_line(aes(y = n_of_brewers, x = year, col = brewer_size))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nI wanted to ensure that the brewer_size information would be listed in plots from smallest production (zero barrels of beer) to largest production (total production). To do this I created a new column that would default to the desired order when plotted and filled it using the `case_when()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_brewer_size <- brewer_size %>% mutate(brewer_size_ordered = case_when(brewer_size == \"Zero Barrels\" ~  \"A\", \n                brewer_size == \"Under 1 Barrel\" ~ \"B\", \n                brewer_size == \"1 to 1,000 Barrels\" ~ \"C\",\n                brewer_size == \"1,001 to 7,500 Barrels\" ~ \"D\",\n                brewer_size == \"7,501 to 15,000 Barrels\" ~ \"E\", \n                brewer_size == \"5,001 to 30,000 Barrels\" ~ \"F\", \n                brewer_size == \"30,001 to 60,000 Barrels\" ~ \"G\", \n                brewer_size == \"60,001 to 100,000 Barrels\" ~ \"H\", \n                brewer_size == \"100,001 to 500,000 Barrels\" ~ \"I\", \n                brewer_size == \"500,001 to 1,000,000 Barrels\" ~ \"J\", \n                brewer_size == \"1,000,001 to 6,000,000 Barrels\" ~ \"K\",\n                brewer_size == \"6,000,001 Barrels and Over\" ~ \"L\",\n                brewer_size == \"1,000,000 to 6,000,000 Barrels\" ~ \"M\",\n                brewer_size == \"2,000,000 to 6,000,000 Barrels\" ~ \"N\",\n                brewer_size == \"1,00,001 to 1,999,999 Barrels\" ~ \"O\",\n                brewer_size == \"Total\" ~ \"P\"))\n```\n:::\n\n\n**Note:** the information provided to the `case_when()` function must be 2-sided where on the left you have a statement that could be passed to `which()` and on the right of the `~` you have the value to replace it with in the new column.\n\nThis solution correctly ordered my legend, but left me with uninformative labels. To return the labels to their original names I used the `scale_colour_discrete()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_brewer_size %>% \n        filter(brewer_size_ordered != \"M\",\n               brewer_size_ordered != \"N\",\n               brewer_size_ordered != \"O\",\n               brewer_size_ordered != \"NA\") %>% \n        group_by(year) %>% \n        ggplot() + \n        geom_line(aes(y = n_of_brewers, x = year, col=brewer_size_ordered)) + \n        scale_colour_discrete(name = \"Brewer size\", \n                              labels = c(\"Zero Barrels\",\n                                         \"Under 1 Barrel\",\n                                         \"1 to 1,000 Barrels\",\n                                         \"1,001 to 7,500 Barrels\",\n                                         \"7,501 to 15,000 Barrels\",\n                                         \"15,001 to 30,000 Barrels\",\n                                         \"30,001 to 60,000 Barrels\", \n                                         \"60,001 to 100,000 Barrels\", \n                                         \"100,001 to 500,000 Barrels\",\n                                         \"500,001 to 1,000,000 Barrels\", \n                                         \"1,000,001 to 6,000,000 Barrels\",\n                                         \"6,000,001 Barrels and Over\",\n                                         \"Total\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n**Note:** `scale_colour_discrete()` mapped these new legend labels to the existing `col` argument that specifies line color. But for plots where you use `fill` to change the plot color (e.g. boxplots, histograms...) use `scale_fill_discrete()` instead.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}