{
  "hash": "e88d959a47bdf415d6c819c7d193e26b",
  "result": {
    "markdown": "---\ntitle: \"How To: Use `case_when`\"\nauthor: \"Amanda R. Hart\"\ndate: \"2020-05-21\"\ncategories: [R]\nimage: \"CaseWhenFig.png\"\n---\n\n\n# How To: use `case_when` to fill a new data column based on data from another column\n\n------------------------------------------------------------------------\n\nI used the tidyverse package and its `case_when()` function to create a new column filled with data based on the information in an existing data column.\n\nTo demonstrate, load a TidyTuesday dataset from 3/31/20:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nbrewer_size <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv\")\n```\n:::\n\n\nFor plotting purposes, I wanted to ensure that the brewer_size information would be listed in plots from smallest production (zero barrels of beer) to largest production (total production). To do this I created a new column that would default to the desired order when plotted and filled it using the `case_when()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_brewer_size <- brewer_size %>% mutate(brewer_size_ordered = case_when(\n        brewer_size == \"Zero Barrels\" ~ \"A\",\n        brewer_size == \"Under 1 Barrel\" ~ \"B\",\n        brewer_size == \"1 to 1,000 Barrels\" ~ \"C\",\n        brewer_size == \"1,001 to 7,500 Barrels\" ~ \"D\",\n        brewer_size == \"7,501 to 15,000 Barrels\" ~ \"E\",\n        brewer_size == \"5,001 to 30,000 Barrels\" ~ \"F\",\n        brewer_size == \"30,001 to 60,000 Barrels\" ~ \"G\",\n        brewer_size == \"60,001 to 100,000 Barrels\" ~ \"H\",\n        brewer_size == \"100,001 to 500,000 Barrels\" ~ \"I\",\n        brewer_size == \"500,001 to 1,000,000 Barrels\" ~ \"J\",\n        brewer_size == \"1,000,001 to 6,000,000 Barrels\" ~ \"K\",\n        brewer_size == \"6,000,001 Barrels and Over\" ~ \"L\",\n        brewer_size == \"1,000,000 to 6,000,000 Barrels\" ~ \"M\",\n        brewer_size == \"2,000,000 to 6,000,000 Barrels\" ~ \"N\",\n        brewer_size == \"1,00,001 to 1,999,999 Barrels\" ~ \"O\",\n        brewer_size == \"Total\" ~ \"P\"))\n```\n:::\n\n\n**Note:** the information provided to the `case_when()` function must be 2-sided where on the left you have a statement that could be passed to `which()` and on the right of the \\~ you have the value to replace it with in the new column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(updated_brewer_size)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n   year brewer_size                    n_of_br…¹ total…² taxab…³ total…⁴ brewe…⁵\n  <dbl> <chr>                              <dbl>   <dbl>   <dbl>   <dbl> <chr>  \n1  2009 6,000,001 Barrels and Over            18  1.71e8  1.60e8 3639970 L      \n2  2009 1,000,001 to 6,000,000 Barrels         4  9.97e6  9.59e6   14548 K      \n3  2009 500,001 to 1,000,000 Barrels           7  4.83e6  4.54e6   21563 J      \n4  2009 100,001 to 500,000 Barrels            27  5.42e6  4.47e6  128000 I      \n5  2009 60,001 to 100,000 Barrels             19  1.50e6  1.22e6   95732 H      \n6  2009 30,001 to 60,000 Barrels              32  1.41e6  1.23e6   14369 G      \n# … with abbreviated variable names ¹​n_of_brewers, ²​total_barrels,\n#   ³​taxable_removals, ⁴​total_shipped, ⁵​brewer_size_ordered\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}